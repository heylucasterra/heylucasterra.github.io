'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require('path'),
    resolve = _require.resolve;

var defaultOptions = require('./default-options');
var mdExt = /.(md|markdown)$/;
var cwd = process.cwd();

module.exports = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2, userOptions) {
		var node = _ref2.node,
		    boundActionCreators = _ref2.boundActionCreators;

		var options, markdownPath, createNodeField, _node$frontmatter, template, permalink, slug;

		return _regenerator2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						if (!(node.internal.type !== 'MarkdownRemark')) {
							_context.next = 2;
							break;
						}

						return _context.abrupt('return');

					case 2:
						options = (0, _extends3.default)({}, defaultOptions, userOptions);
						markdownPath = resolve(cwd, options.path);

						if (!(node.fileAbsolutePath.indexOf(markdownPath) !== 0)) {
							_context.next = 6;
							break;
						}

						return _context.abrupt('return');

					case 6:
						createNodeField = boundActionCreators.createNodeField;
						_node$frontmatter = node.frontmatter, template = _node$frontmatter.template, permalink = _node$frontmatter.permalink;
						slug = permalink || node.fileAbsolutePath.replace(markdownPath, '').replace(mdExt, '');

						createNodeField({
							node: node,
							name: 'template',
							value: template || ''
						});
						createNodeField({
							node: node,
							name: 'slug',
							value: slug
						});

					case 11:
					case 'end':
						return _context.stop();
				}
			}
		}, _callee, undefined);
	}));

	return function (_x, _x2) {
		return _ref.apply(this, arguments);
	};
}();
//# sourceMappingURL=on-create-node.js.map